package ed_ordenacoes;

import ed_list.List;

public class QuickSortImpl implements AbstractSort {

	@Override
	public List ordena(List lista) {
		recQuickSort(0, lista.size() - 1, lista);
		
		return lista;
	}
	public void recQuickSort(int left , int right, List lista){

		if(right - left <= 0)
		return ;
		else {
		int pivot = lista.elementAt(right);

		int partition = partitionIt(left , right , pivot, lista);
		recQuickSort (left, partition-1, lista);
		recQuickSort (partition +1, right, lista);
		}
	}
	public int partitionIt (int left, int right, int pivot, List lista){
		int leftPtr = left -1;
		int rightPtr = right ;
		while(true) {
		while(lista.elementAt(++leftPtr) < pivot)
		      ; 
		      while(rightPtr > 0 && lista.elementAt(--rightPtr) > pivot)
		      ;
		      if(leftPtr>=rightPtr)
		      break;
		      else 
		      lista.troca(leftPtr, rightPtr);
		      }
		      lista.troca(leftPtr, right);
		      return leftPtr;
		}
	
}
