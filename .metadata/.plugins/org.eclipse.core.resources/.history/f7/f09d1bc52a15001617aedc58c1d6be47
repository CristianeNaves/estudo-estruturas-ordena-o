package ed_list;


public class HeapImpl implements Heap {

	int [] elements;    
	int size;
	int MAX;
	
	public HeapImpl(){
		size = 0;
		MAX = 100;
		elements = new int[MAX];
	}
	public boolean isEmpty() {
		return (size == 0);
	}
	public int parent(int i){
		return i/2;
	}
	public int left(int i){
		return 2 * i;
	}
	public int right(int i){
		return (2 * i) + 1;
	}
	public void troca(int largest, int idx){
		int aux = elements[idx];
		elements[idx] = elements[largest];
		elements[largest] = aux;
	}
	public void maxHeapify(int idx){
		int largest = idx;
		int left = left(idx);
		int right = right(idx);
		
		if(elements[left] > elements[largest])
			largest = left;
		if(elements[right] > elements[largest])
			largest = right;
		if(largest != idx){
			lista.troca(largest, idx);
			maxHeapify(largest);
		}
		
	}
	

	@Override
	public void enqueue(int value) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int dequeue() {
		// TODO Auto-generated method stub
		return 0;
	}

	public int size() {
		return lista.size();
	}

}
